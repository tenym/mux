cmake_minimum_required (VERSION 2.4)

INCLUDE(PlatConfig.mk)
SET(CMAKE_C_COMPILER ${PLATFORM_TOOLCHAIN}gcc)  
SET(CMAKE_CXX_COMPILER ${PLATFORM_TOOLCHAIN}g++)  

SET(PROJECTNAME DEMO)

PROJECT (${PROJECTNAME})

SET(TOP_BINARY_DIR ${${PROJECTNAME}_BINARY_DIR})
SET(TOP_SOURCE_DIR ${${PROJECTNAME}_SOURCE_DIR})

MESSAGE(STATUS "This is config path " ${CONFIG_PATH})
MESSAGE(STATUS "This is BINARY dir " ${TOP_BINARY_DIR})
MESSAGE(STATUS "This is SOURCE dir " ${TOP_SOURCE_DIR})
MESSAGE(STATUS "CROSS_COMPILE is " ${CROSS_COMPILE})
MESSAGE(STATUS "Platform define: " ${PLATFORM_TYPE})

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/bin)

SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/bin)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib/debug)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib/release)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/lib/Release)

#if (WIFI_SUPPORT)
#    ADD_DEFINITIONS(-DWIFI_SUPPORT)
#endif()

#static lib
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

ADD_SUBDIRECTORY(demo)

